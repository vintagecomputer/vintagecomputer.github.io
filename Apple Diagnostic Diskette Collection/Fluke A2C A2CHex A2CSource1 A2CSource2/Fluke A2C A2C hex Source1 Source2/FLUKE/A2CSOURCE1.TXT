INCLUDE "6502.POD"SETUP INFORMATION                         !FLUKE 9010A SETUP INFO                                           !FOR THE 9010A -              TRAP DATA ERROR-YES                    !6502 POD SPECIFIC INFO         TRAP ADDRESS ERROR-YES   TRAP CONTROL ERROR-YES   TRAP ACTIVE FORCE LINE-NO              !SET TO KEEP THE 9010A FROM   TRAP ACTIVE INTERRUPT-NO               !STOPPING DURING AN INTERRUPT      TRAP ILLEGAL ADDRESS-YES   TRAP BAD POWER SUPPLY-YES   BEEP ON ERR TRANSITION-YES   EXERCISE ERRORS-YES   BUS TEST @ 0000   RUN UUT @ FFFFFFFC   STALL 13   UNSTALL 11   LINESIZE 79   TIMEOUT 200   NEWLINE 00000D0A   POD - 6502   ENABLE RDY-YESADDRESS SPACE INFORMATION   I/O @ 0350-037F BITS FF                    !SET TO PERFORM A QUICK   RAM @ 0380-063F                            !AUTO TEST OF THE UUT    I/O @ 0640-0650 BITS FF   ROM @ C100-FEFF SIG 83B7PROGRAM CHECK                                 !PROGRAM 0 - DISPLAYS                                               !THE OK MESSAGE. CAN       DPY-+OK?1                                  !BE USED BY OTHER PROGRAMS.    IF REG1 = 1 GOTO 0   REGB = 0    GOTO F0: LABEL 0   REGB = 40 F: LABEL FPROGRAM MENU                                  !PROGRAM 1!THIS IS THE MAIN PROGRAM WHICH ALLOWS THE USER TO SELECT THE!PROGRAM TO BE RUN.DPY-#APPLE IIC DIAGNOSTICSDPY-+ - REV.AREGF = 45                                     !GLOBAL REGISTER USED TO SETEXECUTE PROGRAM NOP                           !DISPLAY TIMEDPY-#<C>APPLE COMPUTER INC.,DPY-+ 1984EXECUTE PROGRAM NOP                           !NOP - WAIT LOOP; PROGRAM 2DPY-#CONNECT 65C02 PODEXECUTE PROGRAM NOPF: LABEL FDPY-#ENTER TEST <0-8> A-MENU /0IF REG0 = 0 GOTO 0                            !GOTO RUN ALL PROGRAMIF REG0 = 1 GOTO 1                            !GOTO RAM TESTIF REG0 = 2 GOTO 2                            !GOTO ROMTESTIF REG0 = 3 GOTO 3                            !GOTO MMU/IOU TESTIF REG0 = 4 GOTO 4                            !GOTO SERIAL TESTIF REG0 = 5 GOTO 5                            !GOTO KEYBOARD TESTIF REG0 = 6 GOTO 6                            !GOTO SPEAKER TESTIF REG0 = 7 GOTO 7                            !GOTO MOUSEBUTTON TESTIF REG0 = 8 GOTO 8                            !GOTO DISK MOTOR TESTIF REG0 = A GOTO A                            !GOTO PROGRAM MENUGOTO F0: LABEL 0EXECUTE PROGRAM RUNALL                        !PROGRAM NUMBER 4GOTO F1: LABEL 1EXECUTE PROGRAM RAMTEST                       !PROGRAM NUMBER 7  GOTO F2: LABEL 2EXECUTE PROGRAM ROMTEST                       !PROGRAM NUMBER 13GOTO F3: LABEL 3EXECUTE PROGRAM MMUIOU                        !PROGRAM NUMBER 8      GOTO F4: LABEL 4EXECUTE PROGRAM SERIALTST                     !PROGRAM NUMBER 14  GOTO F5: LABEL 5EXECUTE PROGRAM KEYBOARD                      !PROGRAM NUMBER 18 GOTO F6: LABEL 6EXECUTE PROGRAM SPEAKER                       !PROGRAM NUMBER 9    GOTO F7: LABEL 7EXECUTE PROGRAM MOUSEBTTON                    !PROGRAM NUMBER 11GOTO F8: LABEL 8EXECUTE PROGRAM DISKMTR                       !PROGRAM NUMBER 22GOTO FA: LABEL AEXECUTE PROGRAM LIST                          !PROGRAM NUMBER 12GOTO F              PROGRAM NOP                                   !PRG.NO.: 2; GENERIC WAIT LOOPREG1 = REGF                                   !REGF MUST BE ASSIGNED A VALUE1: LABEL 1                                    !TO DETERMINE THE WAIT TIME.  DEC REG1IF REG1 > 0 GOTO 1PROGRAM IOU                                   !PRG.NO.:3; IOU TEST   DPY-#IOU TESTS                             !IOU SOFT SWITCHES   REGF = 64                                  !SETTING NOP COUNTER   EXECUTE PROGRAM NOP                             WRITE @ C001 = 00                          !80 STORE ON;HIRES OFF    READ @ C056                                !80 STORE ON;HIRES OFF        READ @ C054                                !80 STORE ON;HIRES OFF     READ @ C018                                !STATUS BIT TO CHECK     REGE = REGE AND 80                         !CHECK BIT 7 = 1;OK   IF REGE = 00 GOTO F   READ @ C01D                                !STATUS BIT TO CHECK         REGE = REGE AND 80                         !CHECK BIT 7 = 0;OK   IF REGE = 80 GOTO F   READ @ C01C                                !STATUS BIT TO CHECK   REGE = REGE AND 80                         !CHECK BIT 7 = 0;OK       IF REGE = 80 GOTO F   WRITE @ C001 = 00                          !TURN ON 80STORE    READ @ C056                                !TURN OFF HIRES   READ @ C055                                !TURN ON PAGE2   READ @ C018                                !READ 80STORE;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C01D                                !READ HIRES;BIT 7 = 0   REGE = REGE AND 80    IF REGE = 80 GOTO F   READ @ C01C                                !READ PAGE2;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   WRITE @ C001 = 00                          !TURN ON 80STORE     READ @ C057                                !TURN ON HIRES   READ @ C054                                !TURN OFF PAGE2   READ @ C018                                !READ 80STORE;BIT 7 = 1    REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C01D                                !READ HIRES;BIT 7 = 1       REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C01C                                !READ PAGE2;BIT 7 = 0   REGE = REGE AND 80    IF REGE = 80 GOTO F   WRITE @ C001 = 00                          !TURN ON 80STORE    READ @ C057                                !TURN ON HIRES   READ @ C055                                !TURN ON PAGE2    READ @ C018                                !READ 80STORE;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C01D                                !READ HIRES;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C01C                                !READ PAGE2;BIT 7 = 1     REGE = REGE AND 80    IF REGE = 00 GOTO F   WRITE @ C00F = 00                          !ON:DISPLAY TEXT USING ALT CHAR        READ @ C01E                                !READ ALTCHAR SWITCH (1=ON)    REGE = REGE AND 80    IF REGE = 00 GOTO F   WRITE @ C00E = 00                          !OFF;DISPLAY TEXT USING                                               !PRIMARY CHAR SET               READ @ C01E                                !READ ALTCHAR SWITCH (0=OFF)   REGE = REGE AND 80    IF REGE = 80 GOTO F   WRITE @ C00D = 00                          !ON;DISPLAY 80 COLUMN   READ @ C01F                                !READ 80COL SWITCH (1=ON)   REGE = REGE AND 80    IF REGE = 00 GOTO F   WRITE @ C00C = 00                          !OFF;DISPLAY 40 COLUMN    READ @ C01F                                !READ 80COL SWITCH (0=OFF)   REGE = REGE AND 80    IF REGE = 80 GOTO F      READ @ C050                                !OFF;DISPLAY GRAPHICS OR MIXED   READ @ C01A                                !READ TEXT SWITCH (1=ON)   REGE = REGE AND 80    IF REGE = 80 GOTO F   READ @ C051                                !ON; DISPLAY TEXT   READ @ C01A                                !READ TEXT SWITCH (1=ON)   REGE = REGE AND 80    IF REGE = 00 GOTO F   DPY-IOU PASSED                             !IOU TEST COMPLETE.   REGF = 45   EXECUTE PROGRAM NOP    GOTO EF: LABEL F   DPY-SUSPECT IOU                            !IOU TEST FAILED.   REGF = 45    EXECUTE PROGRAM NOP E: LABEL EPROGRAM RUNALL                                !PROGRAM NO.: 4   DPY-EXECUTE ALL TESTS                      !LINKS ALL PROGRAMS   REGF = 45   EXECUTE PROGRAM NOP                     DPY-#1 MEMORY TEST   REGF = 45    EXECUTE PROGRAM NOP   REGF = 45    DPY-2 ROM TEST    REGF = 45   EXECUTE PROGRAM NOP    DPY-3 SERIAL PORT TEST   REGF = 45   EXECUTE PROGRAM NOP   DPY-4 KEYBOARD TEST   REGF = 45   EXECUTE PROGRAM NOP     DPY-5 SPEAKER TEST   REGF = 45   EXECUTE PROGRAM NOP    DPY-6 MOUSE BUTTON TEST   REGF = 45   EXECUTE PROGRAM NOP    DPY-7 DISK MOTOR TEST   REGF = 45   EXECUTE PROGRAM NOP    DPY-BEGIN ALL TESTS...   REGF = 45   EXECUTE PROGRAM NOP    EXECUTE PROGRAM RAMTEST    EXECUTE PROGRAM ROMTEST    EXECUTE PROGRAM SERIALTST    EXECUTE PROGRAM KEYBOARD    EXECUTE PROGRAM SPEAKER    EXECUTE PROGRAM MOUSEBTTON    EXECUTE PROGRAM DISKMTRE: LABEL EPROGRAM TONEERROR                             !PROGRAM NO.: 5   REG1 = 3                                   !BEEPING PROGRAM  1: LABEL 1   DPY-+#                                     !DISPLAYS BELL   REG2 = 5 2: LABEL 2   DEC REG2   IF REG2 > 0 GOTO 2   DEC REG1   IF REG1 > 0 GOTO 1E: LABEL EPROGRAM MMU                                   !PROGRAM NO.: 6    DPY-#MMU TEST   REGF = 45   EXECUTE PROGRAM NOP    !BANK SWITCHING MAIN RAM .. 48K   WRITE @ C000 = 00                          !TURN OFF 80STORE   WRITE @ C002 = 00                          !READ FORM MAIN MEMORY    WRITE @ C004 = 00                          !WRITE TO MAIN MEMORY   READ @ C018                                !READ 80STORE;BIT 7 = 0   REGE = REGE AND 80      IF REGE = 80 GOTO F   READ @ C013                                !READ RAMRD;BIT 7 = 0   REGE = REGE AND 80    IF REGE = 80 GOTO F   READ @ C014                                !READ RAMWRT;BIT 7 = 0    REGE = REGE AND 80    IF REGE = 80 GOTO F   !MAIN RAM R/W FIRST $D0 BANK   WRITE @ C008 = 00                          !TURN OFF ALTZP    READ @ C08B                                !TURN OFF ALTZP   READ @ C08B                                !TURN OFF ALTZP   READ @ C016                                !READ ALTZP;BIT 7 = 0   REGE = REGE AND 80    IF REGE = 80 GOTO F   READ @ C011                                !READ BANK2;BIT 7 = 0   REGE = REGE AND 80    IF REGE = 80 GOTO F   READ @ C012                                !READ ENLCRAM;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   !R/W SECOND D0 BANK   WRITE @ C008 = 00                          !TURN OFF ALTZP     READ @ C083                                !TURN OFF ALTZP     READ @ C083                                !TURN OFF ALTZP    READ @ C016                                !READ ALTZP;BIT 7 = 0   REGE = REGE AND 80    IF REGE = 80 GOTO F   READ @ C011                                !READ BANK2;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C012                                !READ ENLCRAM;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   !AUX MEM BANK SWITCHING-48K AUX MEM   WRITE @ C000 = 00                          !TURN OFF 80STORE   WRITE @ C003 = 00                          !READ FROM AUX MEM    WRITE @ C005 = 00                          !WRITE TO AUX MEM   READ @ C018                                !READ 80STORE;BIT 7 = 0   REGE = REGE AND 80    IF REGE = 80 GOTO F   READ @ C013                                !READ RAMRD;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C014                                !READ RAMWRT;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   !AUX R/W FIRST D0 BANK   WRITE @ C009 = 00                          !TURN ON ALTZP    READ @ C08B                                !TURN ON ALTZP   READ @ C08B                                !TURN ON ALTZP   READ @ C016                                !READ ALTZP;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C011                                !READ BANK2;BIT 7 = 0   REGE = REGE AND 80    IF REGE = 80 GOTO F   READ @ C012                                !READ ENLCRAM;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   !AUX SECOND D0 BANK   WRITE @ C009 = 00                          !TURN ON ALTZP   READ @ C083                                !TURN ON ALTZP   READ @ C083                                !TURN ON ALTZP   READ @ C016                                !READ ALTZP;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C011                                !READ BANK2;BIT 7 = 1   REGE = REGE AND 80    IF REGE = 00 GOTO F   READ @ C012                                !READ ENLCRAM;BIT 7 = 1     REGE = REGE AND 80    IF REGE = 00 GOTO F   GOTO AF: LABEL F   READ @ C054                                !TURN OFF GRAPHICS   DPY-#SUSPECT BAD MMU   REGF = 45   EXECUTE PROGRAM NOP    GOTO EA: LABEL A   READ @ C054                                !TURN OFF GRAPHICS   DPY-BANK SWITCHING PASSED   DPY-#MMU PASSED   REGF = 45   EXECUTE PROGRAM NOP E: LABEL EPROGRAM RAMTEST                               !PROGRAM NO.: 7   DPY-#SHORT OR LONG RAM TEST...             !RAMSHORT TEST AND RAMLONG    REGF = 45   EXECUTE PROGRAM NOP    DPY-RAM SHORT = YES;RAM LONG =   DPY-+NO?A   IF REGA = 0 GOTO A   DPY-#SHORT AUX RAM TEST ONLY?A             !RUN AUX MEM TEST ONLY?          IF REGA = 1 GOTO C   DPY-#RAM SHORT MAIN RAM TEST...   REGF = 45   EXECUTE PROGRAM NOP    EXECUTE PROGRAM MMU                        !TEST BANK SWITCHING ABILITIES   DPY-#MAIN 48K TEST...10 MINUTES   WRITE @ C000 = 00                          !MAIN MEM 48K BANK SWITCHING    WRITE @ C002 = 00    WRITE @ C004 = 00    RAM SHORT @ 200 -BFFF                      !48K ADDRESS SPACE      DPY-MAIN 48K RAM PASSED#   REGF = 45    EXECUTE PROGRAM NOP    DPY-#REST OF MAIN RAM TEST   DPY-#ZERO PAGE TEST...                     !TEST ZERO PAGE    DPY-+10 SECONDS   REGF = 45   EXECUTE PROGRAM NOP    WRITE @ C008 = 00                          !BANK SWITCH TO ZERO PAGE      READ @ C08B    READ @ C08B    RAM SHORT @ 000 -1FF                       !ZERO PAGE ADDRESS PAGE     DPY-#MAIN RAM ZERO PAGE PASSED   REGF = 45   EXECUTE PROGRAM NOP     DPY-#TESTING D000-FFFF..2 MINUTE           !FIRST D0 BANK   DPY-+S   REGF = 45   EXECUTE PROGRAM NOP   RAM SHORT @ D000 - FFFF                    !FIRST D0 BANK ADDRESS SPACE     DPY-D000-FFFF TEST PASSED   REGF = 45    EXECUTE PROGRAM NOP    DPY-#BANK SWITCH D000-DFFF;1 MIN           !SECOND D0 BANK   DPY-+UTE   REGF = 45    EXECUTE PROGRAM NOP    WRITE @ C008 = 00                          !BANK SWITCH TO SECOND D0 BANK    READ @ C083    READ @ C083    RAM SHORT @ D000 - DFFF                    !SECOND D0 BANK ADDRESS SPACE   DPY-###MAIN SHORT RAM TEST COMP   DPY-+LETE   REGF = 45   EXECUTE PROGRAM NOP C: LABEL C   DPY-#SHORT AUX RAM TEST                    !SHORT AUX MEM TEST   REGF = 45      EXECUTE PROGRAM NOP    EXECUTE PROGRAM MMU                        !MMU TEST VERIFY BANK SWITCHING    DPY-#48K AUX RAM TEST..10 MINUTE   DPY-+S   REGF = 45    EXECUTE PROGRAM NOP    WRITE @ C000 = 00                          !BANK SWITCHING TO AUX MEM   WRITE @ C003 = 00                          !48K MAIN MEM   WRITE @ C005 = 00    RAM SHORT @ 200 -BFFF                      !48K MAIN MEM ADDRESS SPACE   DPY-48K AUX RAM PASSED   REGF = 45   EXECUTE PROGRAM NOP    DPY-AUX ZERO PAGE TEST..10 SECON   DPY-+DS   REGF = 45    EXECUTE PROGRAM NOP    WRITE @ C009 = 00                          !AUX ZERO PAGE BANK SWITCHING    READ @ C08B    READ @ C08B    RAM SHORT @ 000 -1FF                       !AUX ZERO PAGE ADDRESS SPACE   DPY-#AUX ZERO PAGE PASSED   REGF = 45   EXECUTE PROGRAM NOP   DPY-D000-FFFF AUX TEST..2 MINUTE   DPY-+S   REGF = 45   EXECUTE PROGRAM NOP   RAM SHORT @ D000 -FFFF                     !AUX FIRST D0 BANK    DPY-#FIRST D0 BANK PASSED   REGF = 45   EXECUTE PROGRAM NOP    DPY-AUX SECOND D0 BANK   REGF = 45    EXECUTE PROGRAM NOP    WRITE @ C009 = 00                          !BANK SWITCHING TO 2ND D0 BANK   READ @ C083    READ @ C083    RAM SHORT @ D000 - DFFF                    !D0 BANK ADDRESS SPACE      DPY-###AUX RAM SHORT PASSED   REGF = 45   EXECUTE PROGRAM NOP    GOTO EA: LABEL A   DPY-#LONG RAM TEST...64K                   !RAMLONG TEST   REGF = 45    EXECUTE PROGRAM NOP    DPY-#TEST REQUIRES 5.5 HOURS   REGF = 45   EXECUTE PROGRAM NOP    DPY-DO YOU WISH TO CONTINUE?A   IF REGA = 0 GOTO E   DPY-AUX RAM LONG ONLY?A                    !AUX RAM LONG TEST ONLY?       IF REGA = 1 GOTO B   DPY-RAM LONG TEST 48K...#   REGF = 45   EXECUTE PROGRAM NOP    EXECUTE PROGRAM MMU                        !MMU TEST FIRST    DPY-#48K RAM LONG TEST-5.5 HOU             !RAM LONG TEST   DPY-+RS   WRITE @ C000 = 00                          !BANK SWITCHING TO 48K   WRITE @ C002 = 00    WRITE @ C004 = 00    RAM LONG @ 200 - BFFF                      !48K ADDRESS SPACE          DPY-MAIN 48K PASSED   REGF = 45   EXECUTE PROGRAM NOP    DPY-#MAIN LONG MEM ZERO PAGE               !MEM ZERO PAGE   REGF = 45   EXECUTE PROGRAM NOP    WRITE @ C008 = 00                          !BANK SWITCH TO ZERO PAGE         READ @ C08B    READ @ C08B    RAM LONG @ 000 - 1FF                       !ZERO PAGE ADDRESS SPACE   DPY-#MAIN RAM ZERO PAGE PASSED   REGF = 45   EXECUTE PROGRAM NOP   DPY-TESTING FIRST D0 SPACE                 !AUX MEM D000-FFFF TEST   REGF = 45   EXECUTE PROGRAM NOP    RAM LONG @ D000 -FFFF                      !ADDRESS SPACE BEING TESTED    DPY-MAIN D000-FFFF PASSED   REGF = 45    EXECUTE PROGRAM NOP    DPY-SECOND D0 BANK...                      !TEST 2ND D0 BANK   REGF = 45   EXECUTE PROGRAM NOP    WRITE @ C008 = 00                          !BANK SWITCH TO 2ND D0 SPACE   READ @ C083    READ @ C083    RAM LONG @ D000 - DFFF                     !2ND D0 ADDRESS SPACE    DPY-#LONG MAIN RAM TEST COMPLET   DPY-+E   REGF = 45   EXECUTE PROGRAM NOPB: LABEL B   EXECUTE PROGRAM MMU                        !AUX MEM TEST    DPY-48K AUX RAM LONG TEST...               !48K AUX RAMLONG TEST   REGF = 45   EXECUTE PROGRAM NOP   WRITE @ C000 = 00                          !48K BANK SWITCHING   WRITE @ C003 = 00    WRITE @ C005 = 00    RAM LONG @ 200 - BFFF                      !48K ADDRESS SPACE   DPY-#AUX 48K RAM PASSED   REGF = 45   EXECUTE PROGRAM NOP    DPY-AUX ZERO PAGE TEST...   REGF = 45   EXECUTE PROGRAM NOP   WRITE @ C009 = 00                          !AUX ZERO PAGE BANK SWITCHES    READ @ C08B    READ @ C08B    RAM LONG @ 000 -1FF                        !ZERO PAGE ADDRESS SPACE   DPY-#AUX ZERO PAGE PASSED   REGF = 45   EXECUTE PROGRAM NOP    DPY-AUX D000-FFFF TESTING...               !FIRST D0 SPACE   REGF = 45   EXECUTE PROGRAM NOP    RAM LONG @ D000 - FFFF    DPY-D000-FFFF PASSED   REGF = 45    EXECUTE PROGRAM NOP    DPY-#AUX SECOND D0 BANK                    !2ND D0 SPACE   REGF = 45   EXECUTE PROGRAM NOP    WRITE @ C009 = 00                          !BANK SWITCHES - 2ND D0 BANK   READ @ C083    READ @ C083    RAM LONG @ D000 - DFFF                     !2ND D0 SPACE   DPY-LONG AUX RAM TEST COMPLETE#   REGF = 45   EXECUTE PROGRAM NOP E: LABEL EPROGRAM MMUIOU   DPY-#MMU/IOU TEST...                      !PROGRAM NUMBER 8   REGF = 45   EXECUTE PROGRAM NOP   EXECUTE PROGRAM MMU                       !CALL MMUTEST    EXECUTE PROGRAM IOU                       !CALL IOUTEST E: LABEL EPROGRAM SPEAKER                              !PROGRAM NO.: 9   DPY-#SPEAKER TEST                         !SPEAKER TEST   REGF = 45   EXECUTE PROGRAM NOP 1: LABEL 1   EXECUTE PROGRAM TONE                      !CALL TONE PROGRAM     DPY-#TONE HEARD...?A                      !USER REQUEST FOR RESULT   IF REGA = 1 GOTO E   DPY-+...REPEAT?A                          !CHANCE TO REPEAT TEST    IF REGA = 1 GOTO 1   DPY-#SPEAKER SUSPECT BAD...   REGF = 45   EXECUTE PROGRAM NOP E: LABEL E